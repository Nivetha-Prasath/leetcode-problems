/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* rotateRight(struct ListNode* head, int k) {
    struct ListNode*temp1,*temp2,*temp;
    int count = 0;
    temp = head;
    while(temp!=0)
    {
        count++;
        temp = temp->next;
    }
    if(count==0 || k==0)
    {
        return head;
    }
    if(count == k)
    {
        return head;
    }
    if(count > k)
    {
        int position = (count - k) + 1;
        temp2 = head;
        temp1 = head;
        while(temp2->next!=0)
        {
            temp2 = temp2->next;
        }
        int i =1;
        while(i < position-1)
        {
            i++;
            temp1 = temp1->next;
        }
        temp = temp1->next;
        temp1->next = 0;
        temp2->next = head;
        head = temp;

        return head;
    }
    if(count < k)
    {
        k = (k % count);
        if(k!=0)
        {
            int position = (count - k) +1;
            temp1 = head;
            temp2 = head;
            while(temp2->next!=0)
            {
                temp2 = temp2->next;
            }
            int i = 1;
            while(i < position-1)
            {
                i++;
                temp1 = temp1->next;
            }
            temp = temp1->next;
            temp1->next = 0;
            temp2->next = head;
            head = temp;

            return head;
        }
        else{
            return head;
        }
    }
    return head;

}
